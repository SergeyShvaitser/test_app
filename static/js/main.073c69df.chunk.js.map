{"version":3,"sources":["utils/checkUser.js","common/PrivateRoute.js","utils/renderRoutes.js","views/components/dashboard/AccountForm.js","views/components/dashboard/AccountsList.js","routes/index.js","views/containers/Dashboard.js","views/containers/Login.js","App.js","index.js"],"names":["isUserLogged","localStorage","getItem","PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","Route","assign","render","Redirect","to","pathname","renderRoutes","routes","map","authenticate","route","common_PrivateRoute","key","shortid","generate","AccauntForm","addNewAccount","onFieldChange","accData","id","ControlLabel","FormGroup","FormControl","name","value","accountId","type","onChange","e","placeholder","Button","block","bsStyle","onClick","disabled","field2","field3","AccountsList","accounts","removeAccount","ListGroup","length","account","ListGroupItem","Glyphicon","glyph","path","Dashboard","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newAccount","bind","assertThisInitialized","handleFieldChange","setState","objectSpread","defineProperty","target","toConsumableArray","concat","document","getElementById","reset","filter","console","log","AccountForm","dashboard_AccountsList","exact","Login","user","login","handleLoginChange","handlePasswordChange","password","setItem","JSON","stringify","props","history","push","_this$state$user","App","BrowserRouter","Switch","ReactDOM","src_App"],"mappings":"yNAIeA,EAJM,WACnB,QAASC,aAAaC,QAAQ,SCiBjBC,EAbM,SAAAC,GAAA,IAAcC,EAAdD,EAAGE,UAAyBC,EAA5BC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACnBM,EAAAC,EAAAC,cAACC,EAAA,EAADL,OAAAM,OAAA,GACMP,EADN,CAEEQ,OAAQ,kBACNf,IAAiBU,EAAAC,EAAAC,cAACP,EAAcE,GAAWG,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAUC,GAAI,CAACC,SAAU,iBCQ3DC,EAZM,SAAAC,GAAM,OAAIA,EAAOC,IAAI,SAAAjB,GAAA,IAAEE,EAAFF,EAAEE,UAAWgB,EAAblB,EAAakB,aAAiBC,EAA9Bf,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,qCACxCkB,EACEZ,EAAAC,EAAAC,cAACY,EAADhB,OAAAM,OAAA,CACEW,IAAKC,IAAQC,WACbrB,UAAWA,GAAeiB,IAE5Bb,EAAAC,EAAAC,cAACC,EAAA,EAADL,OAAAM,OAAA,CACEW,IAAKC,IAAQC,WACbrB,UAAWA,GAAeiB,kHCsCjBK,EA/CK,SAAAxB,GAAA,IAAEyB,EAAFzB,EAAEyB,cAAeC,EAAjB1B,EAAiB0B,cAAeC,EAAhC3B,EAAgC2B,QAAhC,OAClBrB,EAAAC,EAAAC,cAAA,QAAMoB,GAAG,gBACPtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,wBACAvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,KAAK,YACLC,MAAON,EAAQO,UACfC,KAAK,OACLC,SAAU,SAACC,EAAGL,GAAJ,OAAaN,EAAcW,EAAG,cACxCC,YAAY,gBAGhBhC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,KAAK,SACLG,KAAK,OACLC,SAAU,SAACC,EAAGL,GAAJ,OAAaN,EAAcW,EAAG,WACxCC,YAAY,aAGhBhC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,KAAK,SACLG,KAAK,OACLC,SAAU,SAACC,EAAGL,GAAJ,OAAaN,EAAcW,EAAG,WACxCC,YAAY,cAIlBhC,EAAAC,EAAAC,cAAA,OAAKoB,GAAG,uBACNtB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CACEC,OAAK,EACLC,QAAQ,UACRC,QAASjB,EACTkB,UAAWhB,EAAQO,YAAcP,EAAQiB,SAAWjB,EAAQkB,QAJ9D,qCCRSC,EAvBM,SAAA9C,GAAA,IAAE+C,EAAF/C,EAAE+C,SAAUC,EAAZhD,EAAYgD,cAAZ,OACnB1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAWrB,GAAG,iBACVmB,EAASG,OAGT5C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACGF,EAAS9B,IAAI,SAAAkC,GAAO,OACnB7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAexB,GAAG,YAAYP,IAAKC,IAAQC,YACzCjB,EAAAC,EAAAC,cAAA,OAAKoB,GAAG,eACNtB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,4BAAH,IAAgC2C,EAAQjB,WACxC5B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,0BAAH,IAA8B2C,EAAQP,QACtCtC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,0BAAH,IAA8B2C,EAAQN,SAExCvC,EAAAC,EAAAC,cAAA,OAAKoB,GAAG,UACNtB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAQG,QAAS,kBAAMM,EAAcG,EAAQjB,aAAY5B,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAWC,MAAM,qCAXlFhD,EAAAC,EAAAC,cAAA,0BCJOQ,EAAS,CACpB,CACEuC,KAAM,IACNrD,sBCAF,SAAAsD,IAAa,IAAAC,EAAA,OAAArD,OAAAsD,EAAA,EAAAtD,CAAAuD,KAAAH,IACXC,EAAArD,OAAAwD,EAAA,EAAAxD,CAAAuD,KAAAvD,OAAAyD,EAAA,EAAAzD,CAAAoD,GAAAM,KAAAH,QACKI,MAAQ,CACXC,WAAY,GACZjB,SAAU,IAEZU,EAAKhC,cAAgBgC,EAAKhC,cAAcwC,KAAnB7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAqD,KACrBA,EAAKU,kBAAoBV,EAAKU,kBAAkBF,KAAvB7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAqD,KACzBA,EAAKT,cAAgBS,EAAKT,cAAciB,KAAnB7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAqD,KARVA,iFAWKpB,EAAGL,GACnB2B,KAAKS,SAAS,CAACJ,WAAW5D,OAAAiE,EAAA,EAAAjE,CAAA,GAAKuD,KAAKI,MAAMC,WAAjB5D,OAAAkE,EAAA,EAAAlE,CAAA,GAA8B4B,EAAOK,EAAEkC,OAAOtC,kDAIvE0B,KAAKS,SAAS,CACZrB,SAAS3C,OAAAoE,EAAA,EAAApE,CAAKuD,KAAKI,MAAMhB,UAAjB0B,OAAA,CAA2Bd,KAAKI,MAAMC,aAC9CA,WAAY,KAEdU,SAASC,eAAe,gBAAgBC,8CAG5BhD,GAEZ+B,KAAKS,SAAS,CACZrB,SAAUY,KAAKI,MAAMhB,SAAS8B,OAAO,SAAC1B,GAGpC,OAFA2B,QAAQC,IAAI5B,EAAQjB,WACpB4C,QAAQC,IAAInD,GACLuB,EAAQjB,YAAcN,uCAMjC,OACEtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,OAAKoB,GAAG,qBACNtB,EAAAC,EAAAC,cAACwE,EAAD,CACEvD,cAAekC,KAAKlC,cACpBC,cAAeiC,KAAKQ,kBACpBxC,QAASgC,KAAKI,MAAMC,aAEtB1D,EAAAC,EAAAC,cAACyE,EAAD,CAAclC,SAAUY,KAAKI,MAAMhB,SAAUC,cAAeW,KAAKX,yBA9CnD/C,aDGpBiB,cAAc,EACdgE,OAAO,GAET,CACE3B,KAAM,SACNrD,sBEAF,SAAAiF,IAAa,IAAA1B,EAAA,OAAArD,OAAAsD,EAAA,EAAAtD,CAAAuD,KAAAwB,IACX1B,EAAArD,OAAAwD,EAAA,EAAAxD,CAAAuD,KAAAvD,OAAAyD,EAAA,EAAAzD,CAAA+E,GAAArB,KAAAH,QACKI,MAAQ,CACXqB,KAAM,IAER3B,EAAK4B,MAAQ5B,EAAK4B,MAAMpB,KAAX7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAqD,KACbA,EAAK6B,kBAAoB7B,EAAK6B,kBAAkBrB,KAAvB7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAqD,KACzBA,EAAK8B,qBAAuB9B,EAAK8B,qBAAqBtB,KAA1B7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAqD,KAPjBA,iFAUKpB,GAChBsB,KAAKS,SAAS,CAACgB,KAAKhF,OAAAiE,EAAA,EAAAjE,CAAA,GAAKuD,KAAKI,MAAMqB,KAAjB,CAAuBC,MAAOhD,EAAEkC,OAAOtC,uDAGvCI,GACnBsB,KAAKS,SAAS,CAACgB,KAAKhF,OAAAiE,EAAA,EAAAjE,CAAA,GAAKuD,KAAKI,MAAMqB,KAAjB,CAAuBI,SAAUnD,EAAEkC,OAAOtC,0CAI7DpC,aAAa4F,QAAQ,OAAQC,KAAKC,UAAUhC,KAAKI,MAAMqB,OACvDzB,KAAKiC,MAAMC,QAAQC,KAAK,CACtBhF,SAAU,uCAIN,IAAAiF,EAEkBpC,KAAKI,MAAMqB,KAA9BC,EAFCU,EAEDV,MAAOG,EAFNO,EAEMP,SAEZ,OACElF,EAAAC,EAAAC,cAAA,QAAMoB,GAAG,cACPtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,mBACAvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,KAAK,QACLG,KAAK,OACLF,MAAO0B,KAAKI,MAAMqB,KAAKC,MACvBjD,SAAUuB,KAAK2B,kBACfhD,YAAY,WAGhBhC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,KAAK,WACLG,KAAK,WACLF,MAAO0B,KAAKI,MAAMqB,KAAKI,SACvBpD,SAAUuB,KAAK4B,qBACfjD,YAAY,cAGhBhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAQX,GAAG,YAAYa,QAAQ,UAAUC,QAASiB,KAAK0B,MAAO1C,UAAW0C,IAAUG,GAAnF,kBA1DYvF,aFShBiF,OAAO,IGIIc,UAXH,kBACV1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,KACE3F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,KACGnF,EAAaC,GACdV,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAUC,GAAI,CAAEC,SAAU,iBCPlCqF,IAASxF,OAAOL,EAAAC,EAAAC,cAAC4F,EAAD,MAAS1B,SAASC,eAAe","file":"static/js/main.073c69df.chunk.js","sourcesContent":["const isUserLogged = () => {\n  return !!localStorage.getItem('user')\n}\n\nexport default isUserLogged\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom';\nimport isUserLogged from 'utils/checkUser';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={() => (\n      isUserLogged() ? <Component {...rest} /> : <Redirect to={{pathname: '/login'}} />\n    )} />\n)\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n}\n\n\nexport default PrivateRoute\n","import React from 'react'\nimport shortid from 'shortid'\nimport { PrivateRoute } from 'common'\nimport { Route } from 'react-router-dom'\n\nconst renderRoutes = routes => routes.map(({component, authenticate, ...route}) =>\n  authenticate ? (\n    <PrivateRoute\n      key={shortid.generate()}\n      component={component} {...route} />\n  ) : (\n    <Route\n      key={shortid.generate()}\n      component={component} {...route} />\n  )\n)\n\nexport default renderRoutes\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { FormGroup, FormControl, ControlLabel, Button } from 'react-bootstrap'\n\nconst AccauntForm = ({addNewAccount, onFieldChange, accData}) => (\n  <form id='account-form'>\n    <div>\n      <ControlLabel>Add new account</ControlLabel>\n      <FormGroup>\n        <FormControl\n          name=\"accountId\"\n          value={accData.accountId}\n          type=\"text\"\n          onChange={(e, name) => onFieldChange(e, 'accountId')}\n          placeholder=\"Account ID\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <FormControl\n          name=\"field2\"\n          type=\"text\"\n          onChange={(e, name) => onFieldChange(e, 'field2')}\n          placeholder=\"Field 2\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <FormControl\n          name=\"field3\"\n          type=\"text\"\n          onChange={(e, name) => onFieldChange(e, 'field3')}\n          placeholder=\"Field 3\"\n        />\n      </FormGroup>\n    </div>\n    <div id=\"account-form-footer\">\n      <Button\n        block\n        bsStyle=\"primary\"\n        onClick={addNewAccount}\n        disabled={!accData.accountId || !accData.field2 || !accData.field3}\n      >\n        Add\n      </Button>\n    </div>\n  </form>\n)\n\nAccauntForm.propTypes = {\n  addNewAccount: PropTypes.func.isRequired\n}\n\nexport default AccauntForm;\n","import React from 'react';\nimport { ListGroup, ListGroupItem, Button, Glyphicon } from 'react-bootstrap';\nimport shortid from 'shortid'\n\nconst AccountsList = ({accounts, removeAccount}) => (\n  <ListGroup id=\"accounts-list\">\n    {!accounts.length ? (\n      <p>No accounts</p>\n    ) : (\n      <ListGroup>\n        {accounts.map(account => (\n          <ListGroupItem id=\"list-item\" key={shortid.generate()}>\n            <div id=\"main-fields\">\n              <p><strong>AccountID:</strong> {account.accountId}</p>\n              <p><strong>Field 2:</strong> {account.field2}</p>\n              <p><strong>Field 3:</strong> {account.field3}</p>\n            </div>\n            <div id=\"remove\">\n              <Button onClick={() => removeAccount(account.accountId)}><Glyphicon glyph=\"glyphicon glyphicon-remove\" /></Button>\n            </div>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    )}\n  </ListGroup>\n)\n\nexport default AccountsList;\n","import Dashboard from 'views/containers/Dashboard'\nimport Login from 'views/containers/Login'\n\nexport const routes = [\n  {\n    path: '/',\n    component: Dashboard,\n    authenticate: true,\n    exact: true,\n  },\n  {\n    path: '/login',\n    component: Login,\n    exact: true,\n  }\n]\n","import React, { Component } from 'react'\nimport AccountForm from 'views/components/dashboard/AccountForm'\nimport AccountsList from 'views/components/dashboard/AccountsList'\n\nclass Dashboard extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      newAccount: {},\n      accounts: []\n    }\n    this.addNewAccount = this.addNewAccount.bind(this)\n    this.handleFieldChange = this.handleFieldChange.bind(this)\n    this.removeAccount = this.removeAccount.bind(this)\n  }\n\n  handleFieldChange(e, name) {\n    this.setState({newAccount: {...this.state.newAccount, [name]: e.target.value}});\n  }\n\n  addNewAccount(){\n    this.setState({\n      accounts: [...this.state.accounts, this.state.newAccount],\n      newAccount: {}\n    })\n    document.getElementById(\"account-form\").reset()\n  }\n\n  removeAccount(id){\n\n    this.setState({\n      accounts: this.state.accounts.filter((account) => {\n        console.log(account.accountId);\n        console.log(id);\n        return account.accountId !== id\n      })\n    })\n  }\n\n  render(){\n    return (\n      <div>\n        <h1>Accounts Dashboard</h1>\n        <div id=\"dashboard-wrapper\">\n          <AccountForm\n            addNewAccount={this.addNewAccount}\n            onFieldChange={this.handleFieldChange}\n            accData={this.state.newAccount}\n          />\n          <AccountsList accounts={this.state.accounts} removeAccount={this.removeAccount} />\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Dashboard\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, FormControl, ControlLabel, Button } from 'react-bootstrap'\n\nclass Login extends Component {\n\n  static propTypes = {\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }).isRequired,\n  }\n\n  constructor(){\n    super()\n    this.state = {\n      user: {}\n    }\n    this.login = this.login.bind(this)\n    this.handleLoginChange = this.handleLoginChange.bind(this)\n    this.handlePasswordChange = this.handlePasswordChange.bind(this)\n  }\n\n  handleLoginChange(e) {\n    this.setState({user: {...this.state.user, login: e.target.value}});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({user: {...this.state.user, password: e.target.value}});\n  }\n\n  login(){\n    localStorage.setItem('user', JSON.stringify(this.state.user))\n    this.props.history.push({\n      pathname: '/',\n    })\n  }\n\n  render(){\n\n    let {login, password} = this.state.user\n\n    return (\n      <form id='login-form'>\n        <ControlLabel>Login Form</ControlLabel>\n        <FormGroup>\n          <FormControl\n            name=\"login\"\n            type=\"text\"\n            value={this.state.user.login}\n            onChange={this.handleLoginChange}\n            placeholder=\"Login\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormControl\n            name=\"password\"\n            type=\"password\"\n            value={this.state.user.password}\n            onChange={this.handlePasswordChange}\n            placeholder=\"Password\"\n          />\n        </FormGroup>\n        <Button id=\"login-btn\" bsStyle=\"primary\" onClick={this.login} disabled={!login || !password}>Log in</Button>\n      </form>\n    )\n  }\n\n}\n\nexport default Login\n","import React from 'react';\nimport { BrowserRouter, Redirect, Switch } from 'react-router-dom'\nimport renderRoutes from 'utils/renderRoutes'\nimport { routes } from 'routes'\nimport './index.css';\n\nconst App = () => (\n  <BrowserRouter>\n    <div>\n      <Switch>\n        {renderRoutes(routes)}\n        <Redirect to={{ pathname: '/login' }} />\n      </Switch>\n    </div>\n  </BrowserRouter>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}